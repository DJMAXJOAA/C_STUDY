오전 9:13 2023-04-28	1교시 p101~p109	항 변환, sizeof, 복합대입, 콤마, 조건 연산자 
★형변환은 큰 데이터에서 작은 데이터로 가급적 하지 않는게 좋다
작은 데이터에서 큰 데이터로 가는것은 괜찮다
다른 자료형이여도 int asdf, int qwer -> (float)asdf + (float)qwer 이런식으로 잠깐

★변수 이름은 항상 틀리게 사용

★sizeof 연산자에서 괄호의 우선순위 / 컴파일러에 따라 계산 우선순위가 달라질수도 있다
sizeof i + 8 * 3 -> sizeof i를 계산하고 나머지 연산
sizeof (i + 8) * 3 -> sizeof i+8 계산하고 나머지 연산 

★복합대입 연산자 106p 설명
복합대입 연산자는 저장되는 공간과 연산되는 공간이 다르다
명확하게 이해가 되지 않는다면 괄호를 쳐서 명확하게 하자
res *= b + 10; ~~~ res *= (b + 10);

★콤마연산자 ~

★조건연산자 : 조건문 대신에 간단하게 조건을 달 필요가 있을 때 사용한다.

★과제1 조건연산자 큰값구하기
- a, b, c 값만으로도 계산 할 수 있었음 https://cafe.naver.com/greennany9/36
- 최대한 변수를 안쓰고 좀 가독성 떨어지게 vs 좀 변수를 많이 쓰더라도 깔끔하게?
- 결과값1, 결과값2 두개를 사용했는데 결과값1개만 써서 재활용 가능했음
- 최적화 신경쓰기
================================================================
오전 10:14 2023-04-28	2교시 p109~122p 비트 연산자, 조건문
★비트 연산자는 왠만하면 정수에서만 사용
비트연산자는 속도에 이점이 있어서 많이 사용된다

★시프트 한번 당 2씩 곱해진다고 보면 된다 (1010 -> 10100 / 10에서 20)

★비트연산자 응용 : 마스크 / 상태 변화를 확인하기에 용이하다 (아이템 장착 여부, 이동여부 등)
1 NONE	플래그를 미리 셋팅해서 비트 연산 (#define NONE 1)
2 GUN
4 SWORD
8 BOW
	 스킨정보		   장비정보
00000000 11110000 00000000 00001110
&
00000000 00000000 00000000 11111111

00000000 00000000 00000000 00001110
>> 3번(1000 = 8이니까 세번)
00000000 00000000 00000000 00000001 -> 비트가 1이니까 착용중 확인 ㅇ
원하는 만큼 시프트를 해서 필요한 장비만 확인이 가능하다

★조건문에서 조건이 1(무조건 참)으로 일부러 설정할 때가 있는데,
강조할 때 주로 사용 (무조건 봐야하는 부분...) 사용 안해도 ㄱㅊ
================================================================
오전 11:10 2023-04-28 	3교시 123p~136p

★조건문 작성시 2줄이 넘어가면 블럭표시를 해야함
1줄은 블럭으로 안쳐도 괜찮지만 그래도 하는게 가독성에 좋다
================================================================
오전 11:57 2023-04-28	4교시 137p~	if, switch case

★case문에서 조건식은 정수문만 사용해야 한다.
그리고 break; 는 기본적으로 포함한다. (의도적으로 빠져나가야되는게 아닌 이상)
break는 포함된 블럭을 빠져나간다 (switch 문을 빠져나간다)
===================================================================
오전 11:57 2023-04-28	5교시 154p~165p	while, for, do while 반복문

★while은 조건을 먼저 검사 후 조건이 참인 동안 실행문 반복
for은 지정한 횟수 만큼 반복
do while은 일단 시작, 그리고 조건이 만족되면 또 반복~

★똑같은 이름으로 변수를 선언하면 안된다. (int a =1; int a = 3 이런식)
하지만 반복문 for에서는 가능하게 되는데, 이는 블럭의 범위에 관련있다
int main() { int a = 1; { int a = 3} } ---> 다른 범위의 이름만 같은 a (서로 다른 변수임)
같은 이유로 for문 안에서 쓰이게 되는 반복시 필요한 변수와 다른 변수의 이름이 겹쳐도 괜찮다(권장은 ㄴ)

★for(int i = 1; i<10; i++)에서 조건을 제외한 부분들은 다른 곳에 있어도 작동은 가능하다
int i = 1;
for(; i<10;) { i++ } 이런식으로

★++i = i를 그대로 추가
i++ = i를 복사하고, 그 복사값(i')에 1을 추가하고 i에 대입

★반복문을 사용할 때 최대한 이해하기 쉽게 (초기식 인덱스 보통 0부터 시작)
남이 보기에 헷갈려보이지 않게 코드를 짜도록 노력하기

★do - while문은 다른 반복문과는 다르게 조건에 관계없이 무조건 처음에 한번 실행이 된 후
조건에 맞게 반복문이 실행된다.